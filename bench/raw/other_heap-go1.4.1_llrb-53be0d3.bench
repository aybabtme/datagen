PASS
Benchmark_Heap_StringHeap	     200	   7494502 ns/op	  324773 B/op	   20050 allocs/op
Benchmark_Heap_IntHeap	     500	   3588594 ns/op	  161016 B/op	   20020 allocs/op
Benchmark_Heap_Float64Heap	     500	   3597325 ns/op	  161016 B/op	   20020 allocs/op
Benchmark_Heap_BytesHeap	     200	   8838491 ns/op	  647457 B/op	   20050 allocs/op
Benchmark_Heap_StringHeap_Push	10000000	       229 ns/op	      98 B/op	       1 allocs/op
Benchmark_Heap_IntHeap_Push	20000000	        66.1 ns/op	      49 B/op	       1 allocs/op
Benchmark_Heap_Float64Heap_Push	20000000	        66.5 ns/op	      49 B/op	       1 allocs/op
Benchmark_Heap_BytesHeap_Push	 5000000	       335 ns/op	     164 B/op	       1 allocs/op
Benchmark_Heap_StringHeap_Pop	 2000000	      1060 ns/op	      16 B/op	       1 allocs/op
Benchmark_Heap_IntHeap_Pop	 3000000	       460 ns/op	       8 B/op	       1 allocs/op
Benchmark_Heap_Float64Heap_Pop	 3000000	       456 ns/op	       8 B/op	       1 allocs/op
Benchmark_Heap_BytesHeap_Pop	 1000000	      1213 ns/op	      32 B/op	       1 allocs/op
Benchmark_SortedMap_BytesToString_Insert	 1000000	      3338 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedMap_BytesToString_Delete	 1000000	      3003 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_BytesToString_DeleteMin	 2000000	      1006 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_Float64ToString_Insert	 1000000	      2634 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedMap_Float64ToString_Delete	 1000000	      2595 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_Float64ToString_DeleteMin	 2000000	      1053 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_IntToString_Insert	 1000000	      2646 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedMap_IntToString_Delete	 1000000	      2621 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_IntToString_DeleteMin	 2000000	      1088 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_StringToString_Insert	  500000	      3004 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedMap_StringToString_Delete	 1000000	      2976 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_StringToString_DeleteMin	 2000000	       948 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Bytes_Insert	  500000	      3090 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedSet_Bytes_Delete	 1000000	      2874 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Bytes_DeleteMin	 2000000	       984 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Float64_Insert	 1000000	      2678 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedSet_Float64_Delete	 1000000	      2694 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Float64_DeleteMin	 2000000	      1038 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Int_Insert	 1000000	      2797 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedSet_Int_Delete	 1000000	      2548 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Int_DeleteMin	 2000000	      1050 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_String_Insert	  500000	      2945 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedSet_String_Delete	 1000000	      2655 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_String_DeleteMin	 2000000	       961 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_String_Serial	10000000	       215 ns/op	      64 B/op	       2 allocs/op
Benchmark_Queue_String_TickTock	10000000	       165 ns/op	      64 B/op	       2 allocs/op
Benchmark_Queue_String_Push	10000000	       201 ns/op	      64 B/op	       2 allocs/op
Benchmark_Queue_String_Pop	100000000	        79.6 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_Int_Serial	 5000000	       268 ns/op	      56 B/op	       2 allocs/op
Benchmark_Queue_Int_TickTock	10000000	       152 ns/op	      56 B/op	       2 allocs/op
Benchmark_Queue_Int_Push	10000000	       218 ns/op	      56 B/op	       2 allocs/op
Benchmark_Queue_Int_Pop	100000000	        79.2 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_Float64_Serial	10000000	       197 ns/op	      56 B/op	       2 allocs/op
Benchmark_Queue_Float64_TickTock	10000000	       128 ns/op	      56 B/op	       2 allocs/op
Benchmark_Queue_Float64_Push	10000000	       141 ns/op	      56 B/op	       2 allocs/op
Benchmark_Queue_Float64_Pop	100000000	        60.1 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_Bytes_Serial	 3000000	       395 ns/op	      80 B/op	       2 allocs/op
Benchmark_Queue_Bytes_TickTock	 5000000	       217 ns/op	      80 B/op	       2 allocs/op
Benchmark_Queue_Bytes_Push	 5000000	       326 ns/op	      80 B/op	       2 allocs/op
Benchmark_Queue_Bytes_Pop	100000000	        72.1 ns/op	       0 B/op	       0 allocs/op
ok  	github.com/aybabtme/datagen/bench/_bench	454.842s
