PASS
Benchmark_Heap_StringHeap	     200	   6954558 ns/op	    4135 B/op	       0 allocs/op
Benchmark_Heap_IntHeap	     500	   3556457 ns/op	     771 B/op	       0 allocs/op
Benchmark_Heap_Float64Heap	     300	   4964336 ns/op	    1285 B/op	       0 allocs/op
Benchmark_Heap_BytesHeap	     200	   8867080 ns/op	    5365 B/op	       0 allocs/op
Benchmark_Heap_StringHeap_Push	 5000000	       234 ns/op	      84 B/op	       0 allocs/op
Benchmark_Heap_IntHeap_Push	10000000	       247 ns/op	      42 B/op	       0 allocs/op
Benchmark_Heap_Float64Heap_Push	 5000000	       315 ns/op	      43 B/op	       0 allocs/op
Benchmark_Heap_BytesHeap_Push	 3000000	       351 ns/op	     141 B/op	       0 allocs/op
Benchmark_Heap_StringHeap_Pop	 2000000	      1019 ns/op	       0 B/op	       0 allocs/op
Benchmark_Heap_IntHeap_Pop	 5000000	       403 ns/op	       0 B/op	       0 allocs/op
Benchmark_Heap_Float64Heap_Pop	 3000000	       529 ns/op	       0 B/op	       0 allocs/op
Benchmark_Heap_BytesHeap_Pop	 1000000	      1226 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_BytesToString_Insert	 1000000	      1142 ns/op	      80 B/op	       1 allocs/op
Benchmark_SortedMap_BytesToString_Delete	 1000000	      1451 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_BytesToString_DeleteMin	 1000000	      1000 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_Float64ToString_Insert	 2000000	      1023 ns/op	      63 B/op	       0 allocs/op
Benchmark_SortedMap_Float64ToString_Delete	 1000000	      1655 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_Float64ToString_DeleteMin	 1000000	      1194 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_IntToString_Insert	 2000000	       997 ns/op	      64 B/op	       1 allocs/op
Benchmark_SortedMap_IntToString_Delete	 1000000	      1191 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_IntToString_DeleteMin	 1000000	      1251 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_StringToString_Insert	 1000000	      1105 ns/op	      64 B/op	       1 allocs/op
Benchmark_SortedMap_StringToString_Delete	 1000000	      1455 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_StringToString_DeleteMin	 1000000	      1179 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Bytes_Insert	 1000000	      1195 ns/op	      64 B/op	       1 allocs/op
Benchmark_SortedSet_Bytes_Delete	 1000000	      1553 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Bytes_DeleteMin	 1000000	      1146 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Float64_Insert	 2000000	       858 ns/op	      47 B/op	       0 allocs/op
Benchmark_SortedSet_Float64_Delete	 1000000	      1510 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Float64_DeleteMin	 2000000	      1026 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Int_Insert	 2000000	       813 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedSet_Int_Delete	 2000000	      1053 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Int_DeleteMin	 2000000	      1018 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_String_Insert	 2000000	      1090 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedSet_String_Delete	 1000000	      1245 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_String_DeleteMin	 2000000	      1015 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_String_Serial	20000000	       165 ns/op	      80 B/op	       0 allocs/op
Benchmark_Queue_String_TickTock	30000000	        36.4 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_String_Push	30000000	        56.8 ns/op	      35 B/op	       0 allocs/op
Benchmark_Queue_String_Pop	30000000	        51.3 ns/op	      17 B/op	       0 allocs/op
Benchmark_Queue_Int_Serial	30000000	        37.0 ns/op	      26 B/op	       0 allocs/op
Benchmark_Queue_Int_TickTock	50000000	        32.1 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_Int_Push	100000000	        21.7 ns/op	      21 B/op	       0 allocs/op
Benchmark_Queue_Int_Pop	100000000	        20.7 ns/op	      10 B/op	       0 allocs/op
Benchmark_Queue_Float64_Serial	50000000	        37.5 ns/op	      32 B/op	       0 allocs/op
Benchmark_Queue_Float64_TickTock	50000000	        32.3 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_Float64_Push	100000000	        18.9 ns/op	      21 B/op	       0 allocs/op
Benchmark_Queue_Float64_Pop	100000000	        19.5 ns/op	      10 B/op	       0 allocs/op
Benchmark_Queue_Bytes_Serial	10000000	       229 ns/op	     120 B/op	       0 allocs/op
Benchmark_Queue_Bytes_TickTock	30000000	        38.9 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_Bytes_Push	20000000	       175 ns/op	      80 B/op	       0 allocs/op
Benchmark_Queue_Bytes_Pop	50000000	        60.3 ns/op	      32 B/op	       0 allocs/op
ok  	github.com/aybabtme/datagen/bench/_bench	185.236s
