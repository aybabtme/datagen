Benchmark_Heap_StringHeap-8                       	     500	   3327679 ns/op	    1651 B/op	       0 allocs/op
Benchmark_Heap_IntHeap-8                          	    2000	    777652 ns/op	     193 B/op	       0 allocs/op
Benchmark_Heap_Float64Heap-8                      	    2000	   1073979 ns/op	     193 B/op	       0 allocs/op
Benchmark_Heap_BytesHeap-8                        	     300	   4787939 ns/op	    3577 B/op	       0 allocs/op
Benchmark_Heap_StringHeap_Push-8                  	10000000	       188 ns/op	      82 B/op	       0 allocs/op
Benchmark_Heap_IntHeap_Push-8                     	30000000	        62.6 ns/op	      43 B/op	       0 allocs/op
Benchmark_Heap_Float64Heap_Push-8                 	30000000	        61.5 ns/op	      43 B/op	       0 allocs/op
Benchmark_Heap_BytesHeap_Push-8                   	10000000	       205 ns/op	     129 B/op	       0 allocs/op
Benchmark_Heap_StringHeap_Pop-8                   	 3000000	       590 ns/op	       0 B/op	       0 allocs/op
Benchmark_Heap_IntHeap_Pop-8                      	20000000	        74.9 ns/op	       0 B/op	       0 allocs/op
Benchmark_Heap_Float64Heap_Pop-8                  	20000000	       115 ns/op	       0 B/op	       0 allocs/op
Benchmark_Heap_BytesHeap_Pop-8                    	 2000000	       832 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_BytesToString_Insert-8        	 2000000	       684 ns/op	      80 B/op	       1 allocs/op
Benchmark_SortedMap_BytesToString_Delete-8        	 2000000	       755 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_BytesToString_DeleteMin-8     	 3000000	       586 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_Float64ToString_Insert-8      	 2000000	       740 ns/op	      63 B/op	       0 allocs/op
Benchmark_SortedMap_Float64ToString_Delete-8      	 2000000	       963 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_Float64ToString_DeleteMin-8   	 2000000	       848 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_IntToString_Insert-8          	 2000000	       669 ns/op	      64 B/op	       1 allocs/op
Benchmark_SortedMap_IntToString_Delete-8          	 2000000	       783 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_IntToString_DeleteMin-8       	 2000000	       763 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_StringToString_Insert-8       	 2000000	       780 ns/op	      64 B/op	       1 allocs/op
Benchmark_SortedMap_StringToString_Delete-8       	 2000000	       970 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_StringToString_DeleteMin-8    	 2000000	       743 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Bytes_Insert-8                	 2000000	       717 ns/op	      64 B/op	       1 allocs/op
Benchmark_SortedSet_Bytes_Delete-8                	 2000000	       992 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Bytes_DeleteMin-8             	 2000000	       763 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Float64_Insert-8              	 5000000	       409 ns/op	      47 B/op	       0 allocs/op
Benchmark_SortedSet_Float64_Delete-8              	 2000000	       625 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Float64_DeleteMin-8           	 3000000	       480 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Int_Insert-8                  	 5000000	       392 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedSet_Int_Delete-8                  	 3000000	       520 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Int_DeleteMin-8               	 3000000	       489 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_String_Insert-8               	 3000000	       575 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedSet_String_Delete-8               	 2000000	       673 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_String_DeleteMin-8            	 3000000	       503 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_String_Serial-8                   	10000000	       183 ns/op	      80 B/op	       0 allocs/op
Benchmark_Queue_String_TickTock-8                 	100000000	        24.1 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_String_Push-8                     	10000000	       104 ns/op	      53 B/op	       0 allocs/op
Benchmark_Queue_String_Pop-8                      	100000000	       102 ns/op	      21 B/op	       0 allocs/op
Benchmark_Queue_Int_Serial-8                      	50000000	        68.1 ns/op	      32 B/op	       0 allocs/op
Benchmark_Queue_Int_TickTock-8                    	50000000	        23.4 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_Int_Push-8                        	100000000	        28.4 ns/op	      21 B/op	       0 allocs/op
Benchmark_Queue_Int_Pop-8                         	100000000	        26.5 ns/op	      10 B/op	       0 allocs/op
Benchmark_Queue_Float64_Serial-8                  	50000000	        35.7 ns/op	      32 B/op	       0 allocs/op
Benchmark_Queue_Float64_TickTock-8                	50000000	        29.9 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_Float64_Push-8                    	100000000	        20.5 ns/op	      21 B/op	       0 allocs/op
Benchmark_Queue_Float64_Pop-8                     	100000000	        17.3 ns/op	      10 B/op	       0 allocs/op
Benchmark_Queue_Bytes_Serial-8                    	10000000	       209 ns/op	     120 B/op	       0 allocs/op
Benchmark_Queue_Bytes_TickTock-8                  	50000000	        33.5 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_Bytes_Push-8                      	10000000	       124 ns/op	      80 B/op	       0 allocs/op
Benchmark_Queue_Bytes_Pop-8                       	50000000	       191 ns/op	      32 B/op	       0 allocs/op
PASS
ok  	github.com/aybabtme/datagen/bench/_bench	225.921s
