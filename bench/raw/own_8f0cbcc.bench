PASS
Benchmark_Heap_StringHeap	     200	   7007515 ns/op	    4135 B/op	       0 allocs/op
Benchmark_Heap_IntHeap	     500	   3685407 ns/op	     771 B/op	       0 allocs/op
Benchmark_Heap_Float64Heap	     300	   5099185 ns/op	    1285 B/op	       0 allocs/op
Benchmark_Heap_BytesHeap	     200	   8669574 ns/op	    5365 B/op	       0 allocs/op
Benchmark_Heap_StringHeap_Push	 5000000	       231 ns/op	      84 B/op	       0 allocs/op
Benchmark_Heap_IntHeap_Push	10000000	       255 ns/op	      42 B/op	       0 allocs/op
Benchmark_Heap_Float64Heap_Push	 5000000	       334 ns/op	      43 B/op	       0 allocs/op
Benchmark_Heap_BytesHeap_Push	 3000000	       361 ns/op	     141 B/op	       0 allocs/op
Benchmark_Heap_StringHeap_Pop	 1000000	      1014 ns/op	       0 B/op	       0 allocs/op
Benchmark_Heap_IntHeap_Pop	 5000000	       416 ns/op	       0 B/op	       0 allocs/op
Benchmark_Heap_Float64Heap_Pop	 3000000	       548 ns/op	       0 B/op	       0 allocs/op
Benchmark_Heap_BytesHeap_Pop	 1000000	      1323 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_BytesToString_Insert	 1000000	      1228 ns/op	      80 B/op	       1 allocs/op
Benchmark_SortedMap_BytesToString_Delete	 1000000	      1487 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_BytesToString_DeleteMin	 1000000	      1026 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_Float64ToString_Insert	 1000000	      1006 ns/op	      63 B/op	       0 allocs/op
Benchmark_SortedMap_Float64ToString_Delete	 1000000	      1797 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_Float64ToString_DeleteMin	 1000000	      1256 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_IntToString_Insert	 2000000	      1039 ns/op	      64 B/op	       1 allocs/op
Benchmark_SortedMap_IntToString_Delete	 1000000	      1236 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_IntToString_DeleteMin	 1000000	      1300 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_StringToString_Insert	 1000000	      1121 ns/op	      64 B/op	       1 allocs/op
Benchmark_SortedMap_StringToString_Delete	 1000000	      1550 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_StringToString_DeleteMin	 1000000	      1231 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Bytes_Insert	 1000000	      1214 ns/op	      64 B/op	       1 allocs/op
Benchmark_SortedSet_Bytes_Delete	 1000000	      1620 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Bytes_DeleteMin	 1000000	      1208 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Float64_Insert	 2000000	       899 ns/op	      47 B/op	       0 allocs/op
Benchmark_SortedSet_Float64_Delete	 1000000	      1599 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Float64_DeleteMin	 2000000	      1048 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Int_Insert	 2000000	       869 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedSet_Int_Delete	 1000000	      1003 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Int_DeleteMin	 1000000	      1013 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_String_Insert	 1000000	      1040 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedSet_String_Delete	 1000000	      1271 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_String_DeleteMin	 1000000	      1014 ns/op	       0 B/op	       0 allocs/op
ok  	github.com/aybabtme/datagen/bench/_bench	86.790s
