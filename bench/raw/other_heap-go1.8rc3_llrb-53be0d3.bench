Benchmark_Heap_StringHeap-8                       	     300	   4427448 ns/op	  323182 B/op	   20033 allocs/op
Benchmark_Heap_IntHeap-8                          	     500	   2493019 ns/op	  161012 B/op	   20020 allocs/op
Benchmark_Heap_Float64Heap-8                      	     500	   2528393 ns/op	  161012 B/op	   20020 allocs/op
Benchmark_Heap_BytesHeap-8                        	     300	   5427305 ns/op	  644971 B/op	   20033 allocs/op
Benchmark_Heap_StringHeap_Push-8                  	10000000	       213 ns/op	      98 B/op	       1 allocs/op
Benchmark_Heap_IntHeap_Push-8                     	30000000	        47.3 ns/op	      51 B/op	       1 allocs/op
Benchmark_Heap_Float64Heap_Push-8                 	30000000	        40.7 ns/op	      51 B/op	       1 allocs/op
Benchmark_Heap_BytesHeap_Push-8                   	10000000	       169 ns/op	     161 B/op	       1 allocs/op
Benchmark_Heap_StringHeap_Pop-8                   	 2000000	       712 ns/op	      16 B/op	       1 allocs/op
Benchmark_Heap_IntHeap_Pop-8                      	 5000000	       324 ns/op	       8 B/op	       1 allocs/op
Benchmark_Heap_Float64Heap_Pop-8                  	 5000000	       327 ns/op	       8 B/op	       1 allocs/op
Benchmark_Heap_BytesHeap_Pop-8                    	 2000000	       960 ns/op	      32 B/op	       1 allocs/op
Benchmark_SortedMap_BytesToString_Insert-8        	 2000000	       995 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedMap_BytesToString_Delete-8        	 2000000	       885 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_BytesToString_DeleteMin-8     	 5000000	       435 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_Float64ToString_Insert-8      	 3000000	       583 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedMap_Float64ToString_Delete-8      	 2000000	       641 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_Float64ToString_DeleteMin-8   	 3000000	       439 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_IntToString_Insert-8          	 3000000	       601 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedMap_IntToString_Delete-8          	 2000000	       658 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_IntToString_DeleteMin-8       	 5000000	       463 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_StringToString_Insert-8       	 2000000	       777 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedMap_StringToString_Delete-8       	 2000000	       716 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_StringToString_DeleteMin-8    	 5000000	       437 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Bytes_Insert-8                	 2000000	       856 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedSet_Bytes_Delete-8                	 2000000	       795 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Bytes_DeleteMin-8             	 5000000	       431 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Float64_Insert-8              	 3000000	       585 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedSet_Float64_Delete-8              	 2000000	       638 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Float64_DeleteMin-8           	 5000000	       447 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Int_Insert-8                  	 3000000	       590 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedSet_Int_Delete-8                  	 2000000	       650 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Int_DeleteMin-8               	 5000000	       450 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_String_Insert-8               	 2000000	       748 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedSet_String_Delete-8               	 2000000	       698 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_String_DeleteMin-8            	 5000000	       442 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_String_Serial-8                   	 5000000	       351 ns/op	      64 B/op	       2 allocs/op
Benchmark_Queue_String_TickTock-8                 	20000000	        99.0 ns/op	      64 B/op	       2 allocs/op
Benchmark_Queue_String_Push-8                     	20000000	       146 ns/op	      64 B/op	       2 allocs/op
Benchmark_Queue_String_Pop-8                      	100000000	        12.2 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_Int_Serial-8                      	10000000	       145 ns/op	      56 B/op	       2 allocs/op
Benchmark_Queue_Int_TickTock-8                    	20000000	        66.2 ns/op	      56 B/op	       2 allocs/op
Benchmark_Queue_Int_Push-8                        	10000000	       133 ns/op	      56 B/op	       2 allocs/op
Benchmark_Queue_Int_Pop-8                         	200000000	        44.3 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_Float64_Serial-8                  	10000000	       167 ns/op	      56 B/op	       2 allocs/op
Benchmark_Queue_Float64_TickTock-8                	20000000	        66.6 ns/op	      56 B/op	       2 allocs/op
Benchmark_Queue_Float64_Push-8                    	10000000	       134 ns/op	      56 B/op	       2 allocs/op
Benchmark_Queue_Float64_Pop-8                     	200000000	        56.7 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_Bytes_Serial-8                    	10000000	       487 ns/op	      80 B/op	       2 allocs/op
Benchmark_Queue_Bytes_TickTock-8                  	20000000	       114 ns/op	      80 B/op	       2 allocs/op
Benchmark_Queue_Bytes_Push-8                      	20000000	       152 ns/op	      80 B/op	       2 allocs/op
Benchmark_Queue_Bytes_Pop-8                       	100000000	        27.1 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/aybabtme/datagen/bench/_bench	379.566s
