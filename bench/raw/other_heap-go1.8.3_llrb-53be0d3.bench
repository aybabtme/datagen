Benchmark_Heap_StringHeap-8                       	     300	   4285150 ns/op	  323188 B/op	   20033 allocs/op
Benchmark_Heap_IntHeap-8                          	     500	   2496087 ns/op	  161012 B/op	   20020 allocs/op
Benchmark_Heap_Float64Heap-8                      	     500	   2414339 ns/op	  161012 B/op	   20020 allocs/op
Benchmark_Heap_BytesHeap-8                        	     300	   5532448 ns/op	  644977 B/op	   20033 allocs/op
Benchmark_Heap_StringHeap_Push-8                  	 5000000	       255 ns/op	     100 B/op	       1 allocs/op
Benchmark_Heap_IntHeap_Push-8                     	50000000	        70.3 ns/op	      48 B/op	       1 allocs/op
Benchmark_Heap_Float64Heap_Push-8                 	50000000	        43.4 ns/op	      48 B/op	       1 allocs/op
Benchmark_Heap_BytesHeap_Push-8                   	10000000	       184 ns/op	     161 B/op	       1 allocs/op
Benchmark_Heap_StringHeap_Pop-8                   	 3000000	       807 ns/op	      16 B/op	       1 allocs/op
Benchmark_Heap_IntHeap_Pop-8                      	 5000000	       313 ns/op	       8 B/op	       1 allocs/op
Benchmark_Heap_Float64Heap_Pop-8                  	 5000000	       329 ns/op	       8 B/op	       1 allocs/op
Benchmark_Heap_BytesHeap_Pop-8                    	 2000000	       962 ns/op	      32 B/op	       1 allocs/op
Benchmark_SortedMap_BytesToString_Insert-8        	 2000000	      1195 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedMap_BytesToString_Delete-8        	 2000000	       868 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_BytesToString_DeleteMin-8     	 5000000	       625 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_Float64ToString_Insert-8      	 2000000	       742 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedMap_Float64ToString_Delete-8      	 2000000	       754 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_Float64ToString_DeleteMin-8   	 3000000	       501 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_IntToString_Insert-8          	 2000000	       639 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedMap_IntToString_Delete-8          	 2000000	       677 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_IntToString_DeleteMin-8       	 3000000	       474 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_StringToString_Insert-8       	 2000000	       815 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedMap_StringToString_Delete-8       	 2000000	       794 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedMap_StringToString_DeleteMin-8    	 3000000	       412 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Bytes_Insert-8                	 2000000	       962 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedSet_Bytes_Delete-8                	 2000000	       813 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Bytes_DeleteMin-8             	 5000000	       434 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Float64_Insert-8              	 3000000	       606 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedSet_Float64_Delete-8              	 2000000	       636 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Float64_DeleteMin-8           	 5000000	       446 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Int_Insert-8                  	 3000000	       593 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedSet_Int_Delete-8                  	 3000000	       666 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_Int_DeleteMin-8               	 5000000	       477 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_String_Insert-8               	 2000000	       727 ns/op	      48 B/op	       1 allocs/op
Benchmark_SortedSet_String_Delete-8               	 2000000	       708 ns/op	       0 B/op	       0 allocs/op
Benchmark_SortedSet_String_DeleteMin-8            	 3000000	       479 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_String_Serial-8                   	 5000000	       395 ns/op	      64 B/op	       2 allocs/op
Benchmark_Queue_String_TickTock-8                 	10000000	       133 ns/op	      64 B/op	       2 allocs/op
Benchmark_Queue_String_Push-8                     	 5000000	       230 ns/op	      64 B/op	       2 allocs/op
Benchmark_Queue_String_Pop-8                      	100000000	        55.6 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_Int_Serial-8                      	 5000000	       249 ns/op	      56 B/op	       2 allocs/op
Benchmark_Queue_Int_TickTock-8                    	20000000	        82.6 ns/op	      56 B/op	       2 allocs/op
Benchmark_Queue_Int_Push-8                        	10000000	       227 ns/op	      56 B/op	       2 allocs/op
Benchmark_Queue_Int_Pop-8                         	200000000	        64.0 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_Float64_Serial-8                  	10000000	       266 ns/op	      56 B/op	       2 allocs/op
Benchmark_Queue_Float64_TickTock-8                	20000000	        69.6 ns/op	      56 B/op	       2 allocs/op
Benchmark_Queue_Float64_Push-8                    	10000000	       132 ns/op	      56 B/op	       2 allocs/op
Benchmark_Queue_Float64_Pop-8                     	100000000	        29.4 ns/op	       0 B/op	       0 allocs/op
Benchmark_Queue_Bytes_Serial-8                    	10000000	       182 ns/op	      80 B/op	       2 allocs/op
Benchmark_Queue_Bytes_TickTock-8                  	20000000	        96.5 ns/op	      80 B/op	       2 allocs/op
Benchmark_Queue_Bytes_Push-8                      	20000000	       126 ns/op	      80 B/op	       2 allocs/op
Benchmark_Queue_Bytes_Pop-8                       	100000000	        87.6 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	github.com/aybabtme/datagen/bench/_bench	395.175s
