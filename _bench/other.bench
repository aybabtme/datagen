PASS
Benchmark_SortedMap_BytesToString_Insert	 1000000	      3456 ns/op
Benchmark_SortedMap_BytesToString_Delete	 1000000	      2968 ns/op
Benchmark_SortedMap_BytesToString_DeleteMin	 2000000	       971 ns/op
Benchmark_SortedMap_Float64ToString_Insert	 1000000	      2633 ns/op
Benchmark_SortedMap_Float64ToString_Delete	 1000000	      2661 ns/op
Benchmark_SortedMap_Float64ToString_DeleteMin	 2000000	      1003 ns/op
Benchmark_SortedMap_IntToString_Insert	 1000000	      2601 ns/op
Benchmark_SortedMap_IntToString_Delete	 1000000	      2651 ns/op
Benchmark_SortedMap_IntToString_DeleteMin	 2000000	      1004 ns/op
Benchmark_SortedMap_StringToString_Insert	 1000000	      3095 ns/op
Benchmark_SortedMap_StringToString_Delete	 1000000	      2773 ns/op
Benchmark_SortedMap_StringToString_DeleteMin	 2000000	      1002 ns/op
Benchmark_SortedSet_Bytes_Insert	 1000000	      3213 ns/op
Benchmark_SortedSet_Bytes_Delete	 1000000	      3003 ns/op
Benchmark_SortedSet_Bytes_DeleteMin	 2000000	       990 ns/op
Benchmark_SortedSet_Float64_Insert	 1000000	      2580 ns/op
Benchmark_SortedSet_Float64_Delete	 1000000	      2693 ns/op
Benchmark_SortedSet_Float64_DeleteMin	 2000000	      1000 ns/op
Benchmark_SortedSet_Int_Insert	 1000000	      2580 ns/op
Benchmark_SortedSet_Int_Delete	 1000000	      2553 ns/op
Benchmark_SortedSet_Int_DeleteMin	 2000000	      1002 ns/op
Benchmark_SortedSet_String_Insert	 1000000	      2957 ns/op
Benchmark_SortedSet_String_Delete	 1000000	      2691 ns/op
Benchmark_SortedSet_String_DeleteMin	 2000000	       980 ns/op
Benchmark_Heap_StringHeap	     200	   7930160 ns/op
Benchmark_Heap_IntHeap	     500	   3894812 ns/op
Benchmark_Heap_Float64Heap	     300	   3989001 ns/op
Benchmark_Heap_BytesHeap	     200	   9939312 ns/op
Benchmark_Heap_StringHeap_Push	10000000	       255 ns/op
Benchmark_Heap_IntHeap_Push	20000000	        68.6 ns/op
Benchmark_Heap_Float64Heap_Push	20000000	        68.6 ns/op
Benchmark_Heap_BytesHeap_Push	 5000000	       339 ns/op
Benchmark_Heap_StringHeap_Pop	 1000000	      1035 ns/op
Benchmark_Heap_IntHeap_Pop	 3000000	       470 ns/op
Benchmark_Heap_Float64Heap_Pop	 3000000	       468 ns/op
Benchmark_Heap_BytesHeap_Pop	 1000000	      1266 ns/op
ok  	github.com/aybabtme/datagen/_bench	198.891s
